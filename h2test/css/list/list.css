.list {
  padding-left: 0.25rem; }
  .list li {
    position: relative;
    margin-top: 0.75rem; }
  .list li + li {
    margin-top: 1.25rem; }
  .list li > ul,
  .list li > ol {
    margin-bottom: 0; }

ul,
ol {
  margin-left: 1rem; }

ul.list,
ul.list ul,
ul.list ol ul,
ol.list ul,
ol.list ol ul {
  list-style: none; }
  ul.list li:before,
  ul.list ul li:before,
  ul.list ol ul li:before,
  ol.list ul li:before,
  ol.list ol ul li:before {
    content: " ";
    display: inline-block;
    background-color: #00b9cc;
    width: 0.5rem;
    height: 0.5rem;
    position: relative;
    margin-left: -1.25rem;
    margin-right: 0.5rem;
    margin-top: 0.4em;
    vertical-align: top;
    float: left; }

ol.list li:before,
ul.list ol li:before,
ol.list ul ol li:before,
ul.list ol li:before,
ul.list ul ol li:before {
  content: none; }

ul.list ul li:before,
ol.list ol ul ul li:before {
  height: 2px;
  margin-top: 0.65em; }

.list ul ul {
  list-style: none; }
  .list ul ul li:before {
    height: 1px;
    margin-top: 0.65em; }

.list ul ul li,
.list ol ol li,
.list ul ol li,
.list ol ul li {
  margin-top: 0; }

.list ol li:before {
  content: none; }

.theme--blue .list li:before {
  background-color: #008cdb; }

.theme--turquoise .list li:before {
  background-color: #00b9cc; }

.theme--purple .list li:before {
  background-color: #7c38a1; }

.theme--royalblue .list li:before {
  background-color: #526cff; }

.theme--green .list li:before {
  background-color: #7dc540; }

.step {
  display: block;
  position: relative;
  padding-left: 1.5rem;
  counter-increment: step1;
  margin-top: 0.75rem; }

.step + :not(.step) {
  counter-reset: step1; }

.step:before {
  content: counter(step1) ". ";
  position: absolute;
  text-align: right;
  width: 4rem;
  margin-left: -4.6rem;
  line-height: inherit; }

.step + .step {
  margin-top: 1.25rem; }

/* step level 1 already handled in list.scss */
/* reset nested counter on level $i */
.step :not(.step) {
  counter-reset: step2; }

/* create new selector */
/* add CSS rules */
.step .step {
  counter-increment: step2; }

.step .step:before {
  content: counter(step2) ". "; }

/* reset nested counter on level $i */
.step .step :not(.step) {
  counter-reset: step3; }

/* create new selector */
/* add CSS rules */
.step .step .step {
  counter-increment: step3; }

.step .step .step:before {
  content: counter(step3) ". "; }
